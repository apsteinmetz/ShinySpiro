{
    "contents" : "#http://www.r-bloggers.com/ggplot2-version-of-figures-in-%E2%80%9Clattice-multivariate-data-visualization-with-r%E2%80%9D-part-12/\n\n\nlibrary(ggplot2)\ndebug = FALSE\n\n# Spirograph\n\n# angle in radians\n# draw 2*pi cycles with a point every 1/density radians\ncycles=100\ndensity =100\ndefaultTheta <- 2 * pi * seq(0, cycles, by = 1/density)\n\n# constants for animation\nsleepTime = 0.05\niter = 10000\n\ncircle <- function(cx=0,cy=0,radius = 1, npoints = 100){\n  tt <- seq(0,2*pi,length.out = npoints)\n  xx <- cx + radius * cos(tt)\n  yy <- cy + radius * sin(tt)\n  return(data.frame(x = xx, y = yy))\n}  \n\nhypoTrochoid <-function(r1=100,r2=-10,penLoc=10,theta=defaultTheta)  {\n  #cyclic Trochoid\n  #http://en.wikipedia.org/wiki/Hypotrochoid\n  # in this convention we denote hypo- byt a negative r2 so flip this sign for the usual formulation\n  r2 = -r2\n\n  x <-(r1-r2)*cos(theta) + penLoc*cos((r1-r2)/r2*theta)\n  y <-(r1-r2)*sin(theta) - penLoc*sin((r1-r2)/r2*theta)\n  return(data.frame(x,y))\n}\n\nepiTrochoid <-function(r1=100,r2=10,penLoc=10,theta=defaultTheta)  {\n  #cyclic Trochoid\n  #http://en.wikipedia.org/wiki/Hypotrochoid\n  # r2>0:hypotrochoid\n  # r2<0:epitrochoid\n  x <-(r1+r2)*cos(theta)-penLoc*cos((r1+r2)/r2*theta)\n  y <-(r1+r2)*sin(theta)-penLoc*sin((r1+r2)/r2*theta)\n  return(data.frame(x,y))\n}\n\nplotRandomcTrochoid<-function() {\n  radius1=round(runif(1,1,100))\n  radius2=round(runif(1,-50,50))\n  penLoc=round(radius2*runif(1,0,2))\n  dat<-cTrochoid(radius1,radius2,penLoc,defaultTheta)\n  plot(dat$x,dat$y,type='l',xlab='x',ylab='y')\n  sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n  if (radius2>0)\n    main='Epitrochoid'\n  else\n    main='Hypotrochoid'\n  \n  title(main=main,sub=sub)\n}\n\n\nplotcTrochoid<-function(radius1=100,radius2=10,penLoc=5) {\n  if (radius2>0)\n    dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n  else\n    dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n  plotRange=c(-max(abs(dat)),max(abs(dat)))\n  plot(dat$x,dat$y,type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n  sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n  if (radius2>0)\n    main='Epitrochoid'\n  else\n    main='Hypotrochoid'\n  \n  title(main=main,sub=sub)\n}\n\nggoverlayCircles<-function(radius1,radius2,penLoc){\n\n  c1<-ggplot(data=circle(0,0,radius1),aes(x,y))+geom_path()\n  c2<-ggplot(data=circle(radius1+radius2,0,abs(radius2)),aes(x,y))+geom_path()\n  # l1<- c(x=c(radius1+radius2,radius1+radius2-penLoc*sign(radius2)),y=c(0,0))\n  l1<- c1 + geom_segment(aes(x = radius1+radius2, \n                        y = 0, \n                        xend = radius1+radius2-penLoc*sign(radius2), \n                        yend = 0), \n                    arrow = arrow(length = unit(0.5, \"cm\")))\n  return (c1+c2+l1)\n}\n\nggplotcTrochoid<-function(radius1=100,radius2=10,penLoc=5,overlay=TRUE) {\n  if (radius2>0)\n    dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n  else\n    dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n  plotRange=c(-max(abs(dat)),max(abs(dat)))\n  #t.plot <- qplot(x,y,data=dat)+geom_path() + ylim(plotRange) + xlim(plotRange)\n\n  t.plot<-ggplot(dat,aes(x,y))+geom_path() + ylim(plotRange) + xlim(plotRange)\n  if (overlay) t.plot <- t.plot + ggoverlayCircles(radius1,radius2,penLoc)\n  print(t.plot)\n\n}\n\ngganimatecTrochoid<-function(radius1=100,radius2=20,penLoc=5,point=length(defaultTheta),overlay=TRUE) {\n  \n  \n  if (radius2>0)\n    dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n  else\n    dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n  if (radius2>0)\n    main='Epitrochoid'\n  else\n    main='Hypotrochoid'\n  plotRange=c(-max(abs(dat)),max(abs(dat)))\n  # plot(dat[1,],type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n  sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Location=',penLoc)\n  # title(main=main,sub=sub)\n  if (debug) print(paste(point))\n  t.plot<-ggplot(data=dat[1:point,],aes(x,y))+geom_path()+xlim(plotRange)+ylim(plotRange)\n  print(t.plot)\n  #plot(dat[1:point,],type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n  if (overlay) ggoverlayCircles(radius1,radius2,penLoc)\n} \n\noverlayCircles<-function(radius1,radius2,penLoc){\n  \n  qplot(x,y,data=circleFun(0,0,radius1))\n  qplot(x,y,data=circleFun(radius1+radius2,0,radius2))\n}\n\nanimatecTrochoid<-function(radius1=100,radius2=20,penLoc=5) {\n  \n  if (radius2>0)\n    dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n  else\n    dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n  if (radius2>0)\n    main='Epitrochoid'\n  else\n    main='Hypotrochoid'\n  plotRange=c(-max(abs(dat)),max(abs(dat)))\n  m <- length(defaultTheta)\n  plot(dat[1,],type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n  sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n  title(main=main,sub=sub)\n  for (n in 1:iter) {\n    subDat <- dat[1:n,]\n    plot(subDat,type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n    # lines(dat[1:n,],type='l')\n    Sys.sleep(sleepTime)\n  }\n  title(main=main,sub=sub)\n}\n\n\n\n\nggplotcTrochoid(100,-10,30)\n",
    "created" : 1422987595331.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4090277662",
    "id" : "41F8A451",
    "lastKnownWriteTime" : 1423262645,
    "path" : "~/R/spirograph/spirograph.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}