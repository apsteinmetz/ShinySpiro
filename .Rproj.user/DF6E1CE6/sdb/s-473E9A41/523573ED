{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\nshinyServer(function(input, output) {\n  #http://www.r-bloggers.com/ggplot2-version-of-figures-in-%E2%80%9Clattice-multivariate-data-visualization-with-r%E2%80%9D-part-12/\n  \n  library(plotrix)\n  library(ggplot2)\n  library(shape)\n  \n  debug=TRUE\n  # Spirograph\n  \n  # angle in radians\n  # draw 2*pi cycles with a point every 1/density radians\n  calcCycles=100\n  density =100\n  defaultTheta <- 2 * pi * seq(0, calcCycles, by = 1/density)\n  \ncircle <- function(cx=0,cy=0,radius = 1, npoints = 100){\n    tt <- seq(0,2*pi,length.out = npoints)\n    xx <- cx + radius * cos(tt)\n    yy <- cy + radius * sin(tt)\n    return(data.frame(x = xx, y = yy))\n}  \nggoverlayCircles<-function(radius1,radius2,penLoc){\n    #uses Plotrix\n    c1<-ggplot(data=circle(0,0,radius1),aes(x,y))+geom_path()\n    c2<-ggplot(data=circle(radius1+radius2,0,abs(radius2)),aes(x,y))+geom_path()\n    # l1<- c(x=c(radius1+radius2,radius1+radius2-penLoc*sign(radius2)),y=c(0,0))\n    l1<- geom_segment(aes(x = radius1+radius2, y = 0, xend = radius1+radius2-penLoc*sign(radius2), yend = 0), arrow = arrow(length = unit(0.5, \"cm\")))\n    return (c1+c2+l1)\n}\n\n  shapeoverlayCircles<-function(radius1,radius2,penLoc){\n    #uses Plotrix\n    draw.circle(0,0,radius1,lwd=2,border=\"red\")\n    draw.circle(radius1+radius2,0,abs(radius2),lwd=2,border=\"red\")\n    # lines(x=c(radius1+radius2,radius1+radius2-penLoc*sign(radius2)),y=c(0,0),lwd=2,col=\"green\")\n    Arrows(x0=radius1+radius2,x1=radius1+radius2-penLoc*sign(radius2),\n           y0=0,y1=0,lwd=2,col=\"blue\",arr.adj=1)  \n  }\n\n  hypoTrochoid <-function(r1=100,r2=-10,penLoc=10,theta=defaultTheta)  {\n    #cyclic Trochoid\n    #http://en.wikipedia.org/wiki/Hypotrochoid\n    # in this convention we denote hypo- byt a negative r2 so flip this sign for the usual formulation\n    r2 = -r2\n    \n    x <-(r1-r2)*cos(theta) + penLoc*cos((r1-r2)/r2*theta)\n    y <-(r1-r2)*sin(theta) - penLoc*sin((r1-r2)/r2*theta)\n    return(data.frame(x,y))\n  }\n  \n  epiTrochoid <-function(r1=100,r2=10,penLoc=10,theta=defaultTheta)  {\n    #cyclic Trochoid\n    #http://en.wikipedia.org/wiki/Hypotrochoid\n\n    x <-(r1+r2)*cos(theta)-penLoc*cos((r1+r2)/r2*theta)\n    y <-(r1+r2)*sin(theta)-penLoc*sin((r1+r2)/r2*theta)\n    return(data.frame(x,y))\n  }\n  \n  plotRandomcTrochoid<-function() {\n    radius1=round(runif(1,1,100))\n    radius2=round(runif(1,-50,50))\n    penLoc=round(radius2*runif(1,0,2))\n    dat<-cTrochoid(radius1,radius2,penLoc,defaultTheta)\n    plot(dat$x,dat$y,type='l',xlab='x',ylab='y')\n    sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n    if (radius2>0)\n      main='Epitrochoid'\n    else\n      main='Hypotrochoid'\n    \n    title(main=main,sub=sub)\n  }\n  \n  \n  plotcTrochoid<-function(radius1=100,radius2=10,penLoc=5,overlay=TRUE) {\n    if (radius2>0)\n      dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n    else\n      dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n    plotRange=c(-max(abs(dat)),max(abs(dat)))\n    plot(dat$x,dat$y,type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n    sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n    if (radius2>0)\n      main='Epitrochoid'\n    else\n      main='Hypotrochoid'\n    \n    title(main=main,sub=sub)\n    if (overlay) overlayCircles(radius1,radius2,penLoc)\n  }\n  \n  ggplotcTrochoid<-function(radius1=100,radius2=10,penLoc=5,overlay=TRUE) {\n    if (radius2>0)\n      dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n    else\n      dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n    plotRange=c(-max(abs(dat)),max(abs(dat)))\n    t.plot <- ggplot(data=dat,aes(x,y))+geom_path()+xlim(plotRange)+ylim(plotRange)\n    #,xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n    sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Point=',penLoc)\n    if (radius2>0)\n      main='Epitrochoid'\n    else\n      main='Hypotrochoid'\n    \n    title(main=main,sub=sub)\n    if (overlay) ggoverlayCircles(radius1,radius2,penLoc)\n    # now plot it\n    print(t.plot)\n  }\n  \n  \n\nanimatecTrochoid<-function(radius1=100,radius2=20,penLoc=5,point=length(defaultTheta),overlay=TRUE) {\n\n    \n    if (radius2>0)\n      dat<-epiTrochoid(radius1,radius2,penLoc,defaultTheta)\n    else\n      dat<-hypoTrochoid(radius1,radius2,penLoc,defaultTheta)\n    if (radius2>0)\n      main='Epitrochoid'\n    else\n      main='Hypotrochoid'\n    plotRange=c(-max(abs(dat)),max(abs(dat)))\n    # plot(dat[1,],type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n    sub=paste('Big Circle=',radius1,'Small Circle=',radius2,'Pen Location=',penLoc)\n    # title(main=main,sub=sub)\n    if (debug) print(paste(point))\n    t.plot<-ggplot(data=dat[1:point,],aes(x=x,y=y))+geom_path()+xlim(plotRange)+ylim(plotRange)\n    print(t.plot)\n    #plot(dat[1:point,],type='l',xlab='x',ylab='y',asp=1,xlim=plotRange,ylim=plotRange)\n    if (overlay) \n      print(t.plot+ggoverlayCircles(radius1,radius2,penLoc))\n    else\n      print(t.plot)\n  } \n  \noutput$distPlot <- renderPlot({\n \n    animatecTrochoid(radius1=input$ring1,\n                     radius2=input$ring2,\n                     penLoc=input$penLoc,\n                     point=input$point,\n                     overlay=input$showRings)\n  })\n\n})\n",
    "created" : 1422465905365.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2778275578",
    "id" : "523573ED",
    "lastKnownWriteTime" : 1423262135,
    "path" : "~/R/ShinySpiro/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}